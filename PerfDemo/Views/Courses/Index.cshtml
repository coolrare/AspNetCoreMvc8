@using X.PagedList
@using X.PagedList.Mvc.Core
@model IEnumerable<PerfDemo.Models.Course>

@{
    ViewData["Title"] = "Index";
}

<link href="~/css/PagedList.css" rel="stylesheet" type="text/css" />

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page }))

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Credits)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Department)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Credits)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Department.DepartmentId)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.CourseId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.CourseId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.CourseId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
